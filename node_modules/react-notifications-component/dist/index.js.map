{"version":3,"file":"index.js","mappings":"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","sources":["webpack://react-notifications-component/webpack/universalModuleDefinition","webpack://react-notifications-component/external umd {\"commonjs\":\"react\",\"commonjs2\":\"react\",\"amd\":\"react\",\"root\":\"React\"}","webpack://react-notifications-component/webpack/bootstrap","webpack://react-notifications-component/webpack/runtime/compat get default export","webpack://react-notifications-component/webpack/runtime/define property getters","webpack://react-notifications-component/webpack/runtime/hasOwnProperty shorthand","webpack://react-notifications-component/webpack/runtime/make namespace object","webpack://react-notifications-component/./src/utils/constants.ts","webpack://react-notifications-component/./src/utils/enums.ts","webpack://react-notifications-component/./src/utils/helpers.ts","webpack://react-notifications-component/./src/utils/timer.ts","webpack://react-notifications-component/./src/components/Notification.tsx","webpack://react-notifications-component/./src/store/index.ts","webpack://react-notifications-component/./src/components/Container.tsx"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"react-notifications-component\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"react-notifications-component\"] = factory(root[\"React\"]);\n})(self, function(__WEBPACK_EXTERNAL_MODULE__359__) {\nreturn ","module.exports = __WEBPACK_EXTERNAL_MODULE__359__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export const DEFAULT_CONTAINER_VALUES = {\r\n  isMobile: true,\r\n  breakpoint: 768,\r\n  defaultNotificationWidth: 325\r\n}\r\n\r\nexport const NOTIFICATION_BASE_CLASS = 'rnc__notification-item'\r\n\r\nexport const ERROR = {\r\n  ANIMATION_IN: 'Validation error. `animationIn` option must be an array',\r\n  ANIMATION_OUT: 'Validation error. `animationOut` option must be an array',\r\n\r\n  DISMISS_REQUIRED: 'Validation error. `duration` property of `dismiss` option is required',\r\n  DISMISS_NUMBER: 'Validation error. `duration` property of `dismiss` option must be a Number',\r\n  DISMISS_POSITIVE:\r\n    'Validation error. `duration` property of `dismiss` option must be a positive Number',\r\n  DISMISS_CLICK_BOOL: 'Validation error. `click` property of `dismiss` option must be a Boolean',\r\n  DISMISS_TOUCH_BOOL: 'Validation error. `touch` property of `dismiss` option must be a Boolean',\r\n  DISMISS_WAIT:\r\n    'Validation error. `waitForAnimation` property of `dismiss` option must be a Boolean',\r\n  DISMISS_PAUSE_BOOL:\r\n    'Validation error. `pauseOnHover` property of `dismiss` option must be a Boolean',\r\n  DISMISS_ONSCREEN_BOOL:\r\n    'Validation error. `onScreen` property of `dismiss` option must be a Boolean',\r\n  DISMISS_ICON: 'Validation error. `showIcon` property of `dismiss` option must be a Boolean',\r\n\r\n  TITLE_STRING: 'Validation error. `title` option must be a String',\r\n  TITLE_ELEMENT: 'Validation error. `title` option must be a valid React element/function',\r\n\r\n  MESSAGE_REQUIRED: 'Validation error. `message` option is required',\r\n  MESSAGE_STRING: 'Validation error. `message` option must be a String',\r\n  MESSAGE_ELEMENT: 'Validation error. `message` option must be a valid React element/function',\r\n\r\n  TYPE_REQUIRED: 'Validation error. `type` option is required',\r\n  TYPE_STRING: 'Validation error. `type` option must be a String',\r\n  TYPE_NOT_EXISTENT: 'Validation error. `type` option not found',\r\n\r\n  CONTAINER_REQUIRED: 'Validation error. `container` option is required',\r\n  CONTAINER_STRING: 'Validation error. `container` option must be a String',\r\n  CONTENT_INVALID:\r\n    'Validation error. `content` option must be a valid React component/function/element',\r\n\r\n  WIDTH_NUMBER: 'Validation error. `width` option must be a Number',\r\n  INSERT_STRING: 'Validation error. `insert` option must be a String',\r\n\r\n  TRANSITION_DURATION_NUMBER:\r\n    'Validation error. `duration` property of `transition` option must be a Number',\r\n  TRANSITION_TIMING_FUNCTION:\r\n    'Validation error. `timingFunction` property of `transition` option must be a String',\r\n  TRANSITION_DELAY_NUMBER:\r\n    'Validation error. `delay` property of `transition` option must be a Number',\r\n\r\n  TYPE_NOT_FOUND: 'Validation error. Custom type not found',\r\n  REMOVAL_FUNC: 'Validation error. `onRemoval` must be a function'\r\n}\r\n","export {\r\n  NOTIFICATION_CONTAINER,\r\n  NOTIFICATION_INSERTION,\r\n  NOTIFICATION_TYPE,\r\n  NOTIFICATION_REMOVAL_SOURCE\r\n}\r\n\r\nenum NOTIFICATION_CONTAINER {\r\n  BOTTOM_LEFT = 'bottom-left',\r\n  BOTTOM_RIGHT = 'bottom-right',\r\n  BOTTOM_CENTER = 'bottom-center',\r\n  TOP_LEFT = 'top-left',\r\n  TOP_RIGHT = 'top-right',\r\n  TOP_CENTER = 'top-center',\r\n  CENTER = 'center',\r\n  TOP_FULL = 'top-full',\r\n  BOTTOM_FULL = 'bottom-full'\r\n}\r\n\r\nenum NOTIFICATION_INSERTION {\r\n  TOP = 'top',\r\n  BOTTOM = 'bottom'\r\n}\r\n\r\nenum NOTIFICATION_TYPE {\r\n  SUCCESS = 'success',\r\n  DANGER = 'danger',\r\n  INFO = 'info',\r\n  DEFAULT = 'default',\r\n  WARNING = 'warning'\r\n}\r\n\r\nenum NOTIFICATION_REMOVAL_SOURCE {\r\n  TIMEOUT = 'timeout',\r\n  CLICK = 'click',\r\n  TOUCH = 'touch',\r\n  MANUAL = 'manual'\r\n}","import { iNotificationDismiss, iNotification, iNotificationCustomType, iTransition } from 'src/typings'\r\nimport { NOTIFICATION_BASE_CLASS } from \"src/utils/constants\"\r\nimport { NOTIFICATION_CONTAINER, NOTIFICATION_INSERTION, NOTIFICATION_TYPE } from \"src/utils/enums\"\r\n\r\nexport const isNullOrUndefined = (object: any) => object === null || object === undefined\r\n\r\nexport function isBottomContainer(container: string) {\r\n  return (\r\n    container === NOTIFICATION_CONTAINER.BOTTOM_FULL ||\r\n    container === NOTIFICATION_CONTAINER.BOTTOM_LEFT ||\r\n    container === NOTIFICATION_CONTAINER.BOTTOM_RIGHT ||\r\n    container === NOTIFICATION_CONTAINER.BOTTOM_CENTER\r\n  )\r\n}\r\n\r\nexport function isTopContainer(container: string) {\r\n  return (\r\n    container === NOTIFICATION_CONTAINER.TOP_FULL ||\r\n    container === NOTIFICATION_CONTAINER.TOP_LEFT ||\r\n    container === NOTIFICATION_CONTAINER.TOP_RIGHT ||\r\n    container === NOTIFICATION_CONTAINER.TOP_CENTER\r\n  )\r\n}\r\n\r\nexport function hasFullySwiped(diffX: number, width: number) {\r\n  const swipeLength = Math.abs(diffX)\r\n  const requiredSwipeLength = (40 / 100) * width\r\n  return swipeLength >= requiredSwipeLength\r\n}\r\n\r\nexport function shouldNotificationHaveSliding(notification: iNotification, count: number) {\r\n  if (count <= 1) {\r\n    return false\r\n  }\r\n\r\n  return (\r\n    count > 1 &&\r\n    ((notification.insert === NOTIFICATION_INSERTION.TOP && isTopContainer(notification.container)) ||\r\n      (notification.insert === NOTIFICATION_INSERTION.BOTTOM && isBottomContainer(notification.container)) ||\r\n      notification.container === NOTIFICATION_CONTAINER.CENTER)\r\n  )\r\n}\r\n\r\nexport function htmlClassesForExistingType(type: NOTIFICATION_TYPE | string) {\r\n  switch (type) {\r\n    case NOTIFICATION_TYPE.DEFAULT:\r\n      return [NOTIFICATION_BASE_CLASS, 'rnc__notification-item--default']\r\n    case NOTIFICATION_TYPE.SUCCESS:\r\n      return [NOTIFICATION_BASE_CLASS, 'rnc__notification-item--success']\r\n    case NOTIFICATION_TYPE.DANGER:\r\n      return [NOTIFICATION_BASE_CLASS, 'rnc__notification-item--danger']\r\n    case NOTIFICATION_TYPE.WARNING:\r\n      return [NOTIFICATION_BASE_CLASS, 'rnc__notification-item--warning']\r\n    case NOTIFICATION_TYPE.INFO:\r\n      return [NOTIFICATION_BASE_CLASS, 'rnc__notification-item--info']\r\n    default:\r\n      return [NOTIFICATION_BASE_CLASS]\r\n  }\r\n}\r\n\r\nexport function getHtmlClassesForType(notification: iNotification) {\r\n  const { type, content, userDefinedTypes } = notification\r\n  const base = [NOTIFICATION_BASE_CLASS]\r\n  if (content) {\r\n    return base\r\n  }\r\n\r\n  if (isNullOrUndefined(userDefinedTypes)) {\r\n    return htmlClassesForExistingType(type)\r\n  }\r\n\r\n  const foundType = userDefinedTypes.find((q) => q.name === type)\r\n  return base.concat(foundType.htmlClasses)\r\n}\r\n\r\nexport function getNotificationsForMobileView(notifications: iNotification[]) {\r\n  const top: iNotification[] = []\r\n  const bottom: iNotification[] = []\r\n\r\n  notifications.forEach((notification) => {\r\n    const { container } = notification\r\n    const { CENTER } = NOTIFICATION_CONTAINER\r\n\r\n    if (isTopContainer(container) || container === CENTER) {\r\n      top.push(notification)\r\n    } else if (isBottomContainer(container)) {\r\n      bottom.push(notification)\r\n    }\r\n  })\r\n\r\n  return { top, bottom }\r\n}\r\n\r\nexport function getNotificationsForEachContainer(notifications: iNotification[]) {\r\n  const topLeft: iNotification[] = []\r\n  const topRight: iNotification[] = []\r\n  const topCenter: iNotification[] = []\r\n  const bottomLeft: iNotification[] = []\r\n  const bottomRight: iNotification[] = []\r\n  const bottomCenter: iNotification[] = []\r\n  const center: iNotification[] = []\r\n  const topFull: iNotification[] = []\r\n  const bottomFull: iNotification[] = []\r\n\r\n  notifications.forEach((notification) => {\r\n    const { container } = notification\r\n    if (container === NOTIFICATION_CONTAINER.TOP_FULL) {\r\n      topFull.push(notification)\r\n    } else if (container === NOTIFICATION_CONTAINER.BOTTOM_FULL) {\r\n      bottomFull.push(notification)\r\n    } else if (container === NOTIFICATION_CONTAINER.TOP_LEFT) {\r\n      topLeft.push(notification)\r\n    } else if (container === NOTIFICATION_CONTAINER.TOP_RIGHT) {\r\n      topRight.push(notification)\r\n    } else if (container === NOTIFICATION_CONTAINER.TOP_CENTER) {\r\n      topCenter.push(notification)\r\n    } else if (container === NOTIFICATION_CONTAINER.BOTTOM_LEFT) {\r\n      bottomLeft.push(notification)\r\n    } else if (container === NOTIFICATION_CONTAINER.BOTTOM_RIGHT) {\r\n      bottomRight.push(notification)\r\n    } else if (container === NOTIFICATION_CONTAINER.BOTTOM_CENTER) {\r\n      bottomCenter.push(notification)\r\n    } else if (container === NOTIFICATION_CONTAINER.CENTER) {\r\n      center.push(notification)\r\n    }\r\n  })\r\n\r\n  return {\r\n    topFull,\r\n    bottomFull,\r\n    topLeft,\r\n    topRight,\r\n    topCenter,\r\n    bottomLeft,\r\n    bottomRight,\r\n    bottomCenter,\r\n    center\r\n  }\r\n}\r\n\r\nexport function getTransition({ duration, timingFunction, delay }: iTransition, property: string) {\r\n  return `${duration}ms ${property} ${timingFunction} ${delay}ms`\r\n}\r\n\r\nexport function getUid(a?: string): string {\r\n  return a ? (0 | (Math.random() * 16)).toString(16) : ('' + 1e11 + 1e11).replace(/1|0/g, getUid)\r\n}\r\n\r\nfunction defaultTransition(\r\n  transition: iTransition,\r\n  { duration, timingFunction, delay }: iTransition\r\n) {\r\n  const transitionOptions = transition || ({} as iTransition)\r\n\r\n  if (isNullOrUndefined(transitionOptions.duration)) {\r\n    transitionOptions.duration = duration\r\n  }\r\n\r\n  if (isNullOrUndefined(transitionOptions.timingFunction)) {\r\n    transitionOptions.timingFunction = timingFunction\r\n  }\r\n\r\n  if (isNullOrUndefined(transitionOptions.delay)) {\r\n    transitionOptions.delay = delay\r\n  }\r\n\r\n  return transitionOptions\r\n}\r\n\r\nfunction defaultDismiss(dismiss: iNotificationDismiss): iNotificationDismiss {\r\n  const option = dismiss\r\n  const defaults: iNotificationDismiss = {\r\n    duration: 0,\r\n    click: true,\r\n    touch: true,\r\n    onScreen: false,\r\n    pauseOnHover: false,\r\n    waitForAnimation: false,\r\n    showIcon: false\r\n  }\r\n\r\n  if (!option) {\r\n    return defaults\r\n  }\r\n\r\n  Object.keys(defaults).forEach((prop) => {\r\n    if (isNullOrUndefined(option[prop])) {\r\n      option[prop] = defaults[prop]\r\n    }\r\n  })\r\n\r\n  return option\r\n}\r\n\r\nfunction defaultUserDefinedTypes(\r\n  notification: iNotification,\r\n  definedTypes: iNotificationCustomType[]\r\n) {\r\n  const { content, type } = notification\r\n  if (content) {\r\n    return undefined\r\n  }\r\n\r\n  if (\r\n    type === NOTIFICATION_TYPE.SUCCESS ||\r\n    type === NOTIFICATION_TYPE.DANGER ||\r\n    type === NOTIFICATION_TYPE.INFO ||\r\n    type === NOTIFICATION_TYPE.DEFAULT ||\r\n    type === NOTIFICATION_TYPE.WARNING ||\r\n    !definedTypes\r\n  ) {\r\n    return undefined\r\n  }\r\n\r\n  return definedTypes\r\n}\r\n\r\nexport function parseNotification(\r\n  options: iNotification,\r\n  userDefinedTypes: iNotificationCustomType[],\r\n  defaultNotificationWidth: number\r\n): iNotification {\r\n  const notification = options\r\n  const {\r\n    id,\r\n    type,\r\n    insert,\r\n    content,\r\n    container,\r\n    animationIn,\r\n    animationOut,\r\n    slidingEnter,\r\n    slidingExit,\r\n    touchRevert,\r\n    touchSlidingExit,\r\n    dismiss,\r\n    width,\r\n    onRemoval\r\n  } = notification\r\n\r\n  notification.id = id || getUid()\r\n  notification.type = content ? null : (type.toLowerCase() as NOTIFICATION_TYPE)\r\n\r\n  if (userDefinedTypes && !content) {\r\n    notification.userDefinedTypes = defaultUserDefinedTypes(notification, userDefinedTypes)\r\n  }\r\n\r\n  notification.width = isNullOrUndefined(width) ? defaultNotificationWidth : width\r\n  notification.container = container.toLowerCase() as NOTIFICATION_CONTAINER\r\n  notification.insert = (insert || 'top').toLowerCase() as NOTIFICATION_INSERTION\r\n  notification.dismiss = defaultDismiss(dismiss)\r\n  notification.animationIn = animationIn || []\r\n  notification.animationOut = animationOut || []\r\n\r\n  // eslint-disable-next-line\r\n  notification.onRemoval = onRemoval || (() => {})\r\n\r\n  const t = (duration: number, timingFunction: string, delay: number) => ({\r\n    duration,\r\n    timingFunction,\r\n    delay\r\n  })\r\n\r\n  notification.slidingEnter = defaultTransition(slidingEnter, t(600, 'linear', 0))\r\n  notification.slidingExit = defaultTransition(slidingExit, t(600, 'linear', 0))\r\n  notification.touchRevert = defaultTransition(touchRevert, t(600, 'linear', 0))\r\n\r\n  const touchExit = touchSlidingExit || ({} as { fade: iTransition; swipe: iTransition })\r\n  const swipe = touchExit.swipe || ({} as iTransition)\r\n  const fade = touchExit.fade || ({} as iTransition)\r\n  notification.touchSlidingExit = touchExit\r\n  notification.touchSlidingExit.swipe = defaultTransition(swipe, t(600, 'linear', 0))\r\n  notification.touchSlidingExit.fade = defaultTransition(fade, t(300, 'linear', 0))\r\n\r\n  return notification\r\n}\r\n","export default class Timer {\r\n  constructor(callback: () => void, delay: number) {\r\n    this.callback = callback\r\n    this.remaining = delay\r\n\r\n    this.resume()\r\n  }\r\n\r\n  private timerId: NodeJS.Timeout\r\n  private start: number\r\n  private remaining: number\r\n  private callback: () => void\r\n\r\n  public pause() {\r\n    clearTimeout(this.timerId)\r\n    this.remaining -= Date.now() - this.start\r\n  }\r\n\r\n  resume() {\r\n    this.start = Date.now()\r\n    clearTimeout(this.timerId)\r\n    this.timerId = setTimeout(this.callback, this.remaining)\r\n  }\r\n\r\n  clear() {\r\n    clearTimeout(this.timerId)\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { iNotificationProps, iNotificationState, iNotificationParentStyle } from 'src/typings'\r\nimport {\r\n  getHtmlClassesForType,\r\n  getTransition,\r\n  hasFullySwiped,\r\n  shouldNotificationHaveSliding\r\n} from 'src/utils/helpers'\r\nimport Timer from 'src/utils/timer'\r\nimport { NOTIFICATION_REMOVAL_SOURCE } from 'src/utils/enums'\r\n\r\nexport { Notification }\r\n\r\nclass Notification extends React.Component<iNotificationProps, iNotificationState> {\r\n  constructor(props: iNotificationProps) {\r\n    super(props)\r\n    this.rootElementRef = React.createRef()\r\n\r\n    const { defaultNotificationWidth, notification, isMobile } = props\r\n    const { width } = notification\r\n\r\n    this.state = {\r\n      parentStyle: {\r\n        height: `0px`,\r\n        overflow: 'hidden',\r\n        width: `${width ? width : defaultNotificationWidth}px`\r\n      },\r\n      htmlClassList: getHtmlClassesForType(notification),\r\n      animationPlayState: 'running',\r\n      touchEnabled: true\r\n    }\r\n\r\n    if (isMobile) {\r\n      this.state.parentStyle.width = '100%'\r\n    }\r\n  }\r\n\r\n  private readonly rootElementRef: React.RefObject<HTMLDivElement>\r\n  private timer: Timer\r\n\r\n  componentWillUnmount() {\r\n    if (this.timer) {\r\n      this.timer.clear()\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { notification, notificationsCount } = this.props\r\n    const {\r\n      dismiss: { duration, onScreen }\r\n    } = notification\r\n    const willSlide = shouldNotificationHaveSliding(notification, notificationsCount)\r\n    const { scrollHeight } = this.rootElementRef.current\r\n\r\n    const onTransitionEnd = () => {\r\n      if (!duration || onScreen) return\r\n      const callback = () => this.removeNotification(NOTIFICATION_REMOVAL_SOURCE.TIMEOUT)\r\n      this.timer = new Timer(callback, duration)\r\n    }\r\n\r\n    const callback = () => {\r\n      requestAnimationFrame(() => {\r\n        this.setState((prevState) => ({\r\n          htmlClassList: [...notification.animationIn, ...prevState.htmlClassList]\r\n        }))\r\n      })\r\n    }\r\n\r\n    this.setState(\r\n      ({ parentStyle: { width } }) => ({\r\n        parentStyle: {\r\n          width,\r\n          height: `${scrollHeight}px`,\r\n          transition: willSlide ? getTransition(notification.slidingEnter, 'height') : '10ms height'\r\n        },\r\n        onTransitionEnd\r\n      }),\r\n      callback\r\n    )\r\n  }\r\n\r\n  componentDidUpdate(prevProps: iNotificationProps) {\r\n    if (this.props.hasBeenRemoved && !prevProps.hasBeenRemoved) {\r\n      this.removeNotification(NOTIFICATION_REMOVAL_SOURCE.MANUAL)\r\n    }\r\n\r\n    if (prevProps !== this.props) {\r\n      const { container } = this.props.notification\r\n      const { scrollHeight } = this.rootElementRef.current.children[0]\r\n\r\n      this.setState(({ parentStyle }) => ({\r\n        parentStyle: {\r\n          ...parentStyle,\r\n          height: `${scrollHeight + (container.endsWith('full') ? 0 : 15)}px`\r\n        }\r\n      }))\r\n    }\r\n  }\r\n\r\n  removeNotification(removalFlag: string) {\r\n    const { notification, toggleRemoval } = this.props\r\n    const {\r\n      id,\r\n      onRemoval,\r\n      dismiss: { waitForAnimation }\r\n    } = notification\r\n\r\n    const htmlClassList = [...notification.animationOut, ...getHtmlClassesForType(notification)]\r\n    const onTransitionEnd = () => toggleRemoval(id, () => onRemoval(id, removalFlag))\r\n    const parentStyle: iNotificationParentStyle = {\r\n      height: `0px`,\r\n      overflow: 'hidden',\r\n      transition: getTransition(notification.slidingExit, 'height')\r\n    }\r\n\r\n    if (waitForAnimation) {\r\n      return this.setState(({ parentStyle: { width } }) => ({\r\n        htmlClassList,\r\n        onAnimationEnd: () => {\r\n          this.setState({\r\n            parentStyle: {\r\n              width,\r\n              ...parentStyle\r\n            },\r\n            onTransitionEnd\r\n          })\r\n        }\r\n      }))\r\n    }\r\n\r\n    return this.setState(({ parentStyle: { width } }) => ({\r\n      parentStyle: {\r\n        width,\r\n        ...parentStyle\r\n      },\r\n      onTransitionEnd,\r\n      htmlClassList\r\n    }))\r\n  }\r\n\r\n  onClick = () => {\r\n    const {\r\n      notification: { dismiss }\r\n    } = this.props\r\n    if (dismiss.click || dismiss.showIcon) {\r\n      this.removeNotification(NOTIFICATION_REMOVAL_SOURCE.CLICK)\r\n    }\r\n  }\r\n\r\n  onTouchStart = (event: React.TouchEvent<HTMLDivElement>) => {\r\n    const { pageX } = event.touches[0]\r\n\r\n    this.setState(({ parentStyle }) => ({\r\n      startX: pageX,\r\n      currentX: pageX,\r\n      parentStyle: {\r\n        ...parentStyle,\r\n        position: 'relative'\r\n      }\r\n    }))\r\n  }\r\n\r\n  onTouchMove = (event: React.TouchEvent) => {\r\n    const { pageX } = event.touches[0]\r\n    const { startX } = this.state\r\n    const {\r\n      toggleRemoval,\r\n      notification: {\r\n        id,\r\n        onRemoval,\r\n        slidingExit,\r\n        touchSlidingExit: { swipe, fade }\r\n      }\r\n    } = this.props\r\n\r\n    const distance = pageX - startX\r\n    const { offsetWidth: width } = this.rootElementRef.current\r\n    const swipeTo = window.innerWidth + width\r\n    const left = `${pageX - startX >= 0 ? swipeTo : -swipeTo}px`\r\n\r\n    if (hasFullySwiped(distance, width)) {\r\n      const t1 = getTransition(swipe, 'left')\r\n      const t2 = getTransition(fade, 'opacity')\r\n      const onTransitionEnd = () => {\r\n        toggleRemoval(id, () => onRemoval(id, NOTIFICATION_REMOVAL_SOURCE.TOUCH))\r\n      }\r\n\r\n      return this.setState(({ parentStyle }) => ({\r\n        touchEnabled: false,\r\n        parentStyle: {\r\n          ...parentStyle,\r\n          left,\r\n          opacity: 0,\r\n          transition: `${t1}, ${t2}`\r\n        },\r\n        onTransitionEnd: () => {\r\n          this.setState(({ parentStyle }) => ({\r\n            parentStyle: {\r\n              ...parentStyle,\r\n              height: `0px`,\r\n              overflow: 'hidden',\r\n              transition: getTransition(slidingExit, 'height')\r\n            },\r\n            onTransitionEnd\r\n          }))\r\n        }\r\n      }))\r\n    }\r\n\r\n    return this.setState(({ parentStyle }) => ({\r\n      currentX: pageX,\r\n      parentStyle: {\r\n        ...parentStyle,\r\n        left: `${0 + distance}px`\r\n      }\r\n    }))\r\n  }\r\n\r\n  onTouchEnd = () => {\r\n    const {\r\n      notification: { touchRevert }\r\n    } = this.props\r\n\r\n    this.setState(({ parentStyle }) => ({\r\n      parentStyle: {\r\n        ...parentStyle,\r\n        left: 0,\r\n        transition: getTransition(touchRevert, 'left')\r\n      }\r\n    }))\r\n  }\r\n\r\n  onMouseEnter = () => {\r\n    if (this.timer) {\r\n      this.timer.pause()\r\n    } else {\r\n      this.setState({ animationPlayState: 'paused' })\r\n    }\r\n  }\r\n\r\n  onMouseLeave = () => {\r\n    if (this.timer) {\r\n      this.timer.resume()\r\n    } else {\r\n      this.setState({ animationPlayState: 'running' })\r\n    }\r\n  }\r\n\r\n  renderTimer() {\r\n    const {\r\n      notification: { dismiss }\r\n    } = this.props\r\n    const { duration, onScreen } = dismiss\r\n    const { animationPlayState } = this.state\r\n\r\n    if (!duration || !onScreen) {\r\n      return\r\n    }\r\n\r\n    const style = {\r\n      animationName: 'timer',\r\n      animationDuration: `${duration}ms`,\r\n      animationTimingFunction: 'linear',\r\n      animationFillMode: 'forwards',\r\n      animationDelay: `0`,\r\n      animationPlayState\r\n    }\r\n\r\n    const onAnimationEnd = () => this.removeNotification(NOTIFICATION_REMOVAL_SOURCE.TIMEOUT)\r\n    return (\r\n      <div className=\"rnc__notification-timer\">\r\n        <div\r\n          className=\"rnc__notification-timer-filler\"\r\n          onAnimationEnd={onAnimationEnd}\r\n          style={style}\r\n        ></div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderCustomContent() {\r\n    const { htmlClassList } = this.state\r\n    const {\r\n      notification: {\r\n        id,\r\n        content: CustomContent,\r\n        dismiss: { duration, pauseOnHover }\r\n      }\r\n    } = this.props\r\n\r\n    const hasMouseEvents = duration > 0 && pauseOnHover\r\n\r\n    return (\r\n      <div\r\n        className={`${[...htmlClassList].join(' ')}`}\r\n        onMouseEnter={hasMouseEvents ? this.onMouseEnter : null}\r\n        onMouseLeave={hasMouseEvents ? this.onMouseLeave : null}\r\n      >\r\n        {React.isValidElement(CustomContent) ? CustomContent : <CustomContent {...{ id }} />}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderNotification() {\r\n    const {\r\n      notification: {\r\n        title,\r\n        message,\r\n        dismiss: { showIcon, duration, pauseOnHover }\r\n      }\r\n    } = this.props\r\n    const { htmlClassList } = this.state\r\n    const hasMouseEvents = duration > 0 && pauseOnHover\r\n\r\n    return (\r\n      <div\r\n        className={`${[...htmlClassList].join(' ')}`}\r\n        onMouseEnter={hasMouseEvents ? this.onMouseEnter : null}\r\n        onMouseLeave={hasMouseEvents ? this.onMouseLeave : null}\r\n      >\r\n        <div className=\"rnc__notification-content\">\r\n          {showIcon && <div className=\"rnc__notification-close-mark\" onClick={this.onClick}></div>}\r\n          {title && <div className=\"rnc__notification-title\">{title}</div>}\r\n          <div className=\"rnc__notification-message\">{message}</div>\r\n          {this.renderTimer()}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      notification: {\r\n        content,\r\n        dismiss: { click }\r\n      }\r\n    } = this.props\r\n    const { parentStyle, onAnimationEnd, onTransitionEnd, touchEnabled } = this.state\r\n\r\n    return (\r\n      <div\r\n        ref={this.rootElementRef}\r\n        onClick={click ? this.onClick : null}\r\n        className={'notification'}\r\n        style={parentStyle}\r\n        onAnimationEnd={onAnimationEnd}\r\n        onTransitionEnd={onTransitionEnd}\r\n        onTouchStart={touchEnabled ? this.onTouchStart : null}\r\n        onTouchMove={touchEnabled ? this.onTouchMove : null}\r\n        onTouchEnd={touchEnabled ? this.onTouchEnd : null}\r\n      >\r\n        {content ? this.renderCustomContent() : this.renderNotification()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import { iNotification, iNotificationCustomType, iNotificationStoreParams, iStore } from 'src/typings'\r\nimport { parseNotification } from 'src/utils/helpers'\r\nimport { validateTransition, validators } from 'src/utils/validators'\r\n\r\nclass Store implements iStore {\r\n  constructor() {\r\n    this.counter = 0\r\n    this.add = null\r\n  }\r\n\r\n  public removeNotification: (id: string) => void\r\n  public removeAllNotifications: () => void\r\n\r\n  private types: iNotificationCustomType[]\r\n  private add: (notification: iNotification) => string\r\n  private defaultNotificationWidth: number\r\n  private counter: number\r\n\r\n  private incrementCounter = () => (this.counter += 1)\r\n\r\n  public addNotification(notification: iNotification) {\r\n    if (process.env.NODE_ENV === 'development') {\r\n      const transitions = ['slidingEnter', 'slidingExit', 'touchRevert', 'touchSlidingExit']\r\n      transitions.forEach((transition) => validateTransition(notification, transition))\r\n      validators.forEach((validator) => validator(notification, this.types))\r\n    }\r\n\r\n    this.incrementCounter()\r\n\r\n    const parsedNotification = parseNotification(\r\n      notification,\r\n      this.types,\r\n      this.defaultNotificationWidth\r\n    )\r\n\r\n\r\n    return this.add(parsedNotification)\r\n  }\r\n\r\n  public getCounter = () => this.counter\r\n\r\n  public register(parameters: iNotificationStoreParams) {\r\n    const {\r\n      addNotification,\r\n      removeNotification,\r\n      removeAllNotifications,\r\n      types,\r\n      defaultNotificationWidth\r\n    } = parameters\r\n\r\n    this.add = addNotification\r\n    this.removeNotification = removeNotification\r\n    this.removeAllNotifications = removeAllNotifications\r\n    this.defaultNotificationWidth = defaultNotificationWidth\r\n    this.types = types\r\n  }\r\n}\r\n\r\nexport default new Store()\r\n","import React from 'react'\r\nimport { iNotificationCustomType, iNotification } from 'src/typings'\r\nimport {Notification as ReactNotification} from 'src/components/Notification'\r\nimport store from 'src/store'\r\nimport { DEFAULT_CONTAINER_VALUES as DCV } from 'src/utils/constants'\r\nimport {\r\n  getNotificationsForEachContainer,\r\n  getNotificationsForMobileView,\r\n  isNullOrUndefined\r\n} from 'src/utils/helpers'\r\n\r\nimport \"src/scss/notification.scss\"\r\n\r\nexport { Container, iContainerProps, iContainerState }\r\n\r\n\r\ninterface iContainerProps {\r\n  isMobile?: boolean\r\n  breakpoint?: number\r\n  types?: iNotificationCustomType[]\r\n  defaultNotificationWidth?: number\r\n}\r\n\r\ninterface iContainerState {\r\n  isMobile: boolean\r\n  breakpoint: number\r\n  notifications: iNotification[]\r\n  windowWidth: number\r\n}\r\n\r\nclass Container extends React.Component<iContainerProps, iContainerState> {\r\n  constructor(props: iContainerProps) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      isMobile: isNullOrUndefined(props.isMobile) ? DCV.isMobile : props.isMobile,\r\n      breakpoint: isNullOrUndefined(props.breakpoint) ? DCV.breakpoint : props.breakpoint,\r\n      notifications: [],\r\n      windowWidth: undefined\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { types, defaultNotificationWidth } = this.props\r\n\r\n    store.register({\r\n      addNotification: this.add,\r\n      removeNotification: this.remove,\r\n      removeAllNotifications: this.removeAllNotifications,\r\n      defaultNotificationWidth: defaultNotificationWidth || DCV.defaultNotificationWidth,\r\n      types\r\n    })\r\n\r\n    this.setState({ windowWidth: window.innerWidth })\r\n    window.addEventListener('resize', this.handleResize)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.handleResize)\r\n  }\r\n\r\n  handleResize = () => {\r\n    this.setState({ windowWidth: window.innerWidth })\r\n  }\r\n\r\n  add = (notification: iNotification) => {\r\n    this.setState(({ notifications }) => {\r\n      const nextNotifications = [...notifications]\r\n      const i = nextNotifications.findIndex(({ id }) => id === notification.id)\r\n\r\n      if (i > -1) {\r\n        nextNotifications[i] = notification\r\n\r\n        return {\r\n          notifications: nextNotifications\r\n        }\r\n      }\r\n\r\n      return {\r\n        notifications:\r\n          notification.insert === 'top'\r\n            ? [notification, ...nextNotifications]\r\n            : [...nextNotifications, notification]\r\n      }\r\n    })\r\n\r\n    return notification.id\r\n  }\r\n\r\n  remove = (id: string) => {\r\n    this.setState(({ notifications }) => ({\r\n      notifications: notifications.map((notification) => {\r\n        if (notification.id === id) {\r\n          notification.hasBeenRemoved = true\r\n        }\r\n\r\n        return notification\r\n      })\r\n    }))\r\n  }\r\n\r\n  removeAllNotifications = () => {\r\n    this.setState({\r\n      notifications: this.state.notifications.map((notification) => ({\r\n        ...notification,\r\n        hasBeenRemoved: true\r\n      }))\r\n    })\r\n  }\r\n\r\n  toggleRemoval = (id: string, callback: () => void) => {\r\n    this.setState(\r\n      ({ notifications }) => ({\r\n        notifications: notifications.filter(({ id: nId }) => nId !== id)\r\n      }),\r\n      callback\r\n    )\r\n  }\r\n\r\n  renderNotifications(notifications: iNotification[], isMobile: boolean) {\r\n    return notifications.map((notification) => (\r\n      <ReactNotification\r\n        id={notification.id}\r\n        key={notification.id}\r\n        isMobile={isMobile}\r\n        defaultNotificationWidth={this.props.defaultNotificationWidth}\r\n        notification={notification}\r\n        toggleRemoval={this.toggleRemoval}\r\n        notificationsCount={notifications.length}\r\n        hasBeenRemoved={notification.hasBeenRemoved}\r\n      />\r\n    ))\r\n  }\r\n\r\n  renderMobileNotifications(props) {\r\n    const { className, id } = props\r\n    const { notifications } = this.state\r\n    const mobileNotifications = getNotificationsForMobileView(notifications)\r\n    const top = this.renderNotifications(mobileNotifications.top, true)\r\n    const bottom = this.renderNotifications(mobileNotifications.bottom, true)\r\n\r\n    return (\r\n      <div id={id} key=\"mobile\" className={`rnc__base ${className || ''}`}>\r\n        <div className=\"rnc__notification-container--mobile-top\">{top}</div>\r\n        <div className=\"rnc__notification-container--mobile-bottom\">{bottom}</div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderScreenNotifications(props) {\r\n    const { className, id } = props\r\n    const { notifications } = this.state\r\n    const items = getNotificationsForEachContainer(notifications)\r\n    const topFull = this.renderNotifications(items.topFull, false)\r\n    const bottomFull = this.renderNotifications(items.bottomFull, false)\r\n    const topLeft = this.renderNotifications(items.topLeft, false)\r\n    const topRight = this.renderNotifications(items.topRight, false)\r\n    const topCenter = this.renderNotifications(items.topCenter, false)\r\n    const bottomLeft = this.renderNotifications(items.bottomLeft, false)\r\n    const bottomRight = this.renderNotifications(items.bottomRight, false)\r\n    const bottomCenter = this.renderNotifications(items.bottomCenter, false)\r\n    const center = this.renderNotifications(items.center, false)\r\n\r\n    return (\r\n      <div id={id} key=\"screen\" className={`rnc__base ${className || ''}`}>\r\n        <div className=\"rnc__notification-container--top-full\">{topFull}</div>\r\n        <div className=\"rnc__notification-container--bottom-full\">{bottomFull}</div>\r\n        <div className=\"rnc__notification-container--top-left\">{topLeft}</div>\r\n        <div className=\"rnc__notification-container--top-right\">{topRight}</div>\r\n        <div className=\"rnc__notification-container--bottom-left\">{bottomLeft}</div>\r\n        <div className=\"rnc__notification-container--bottom-right\">{bottomRight}</div>\r\n        <div className=\"rnc__notification-container--top-center\">{topCenter}</div>\r\n        <div className=\"rnc__notification-container--center\">\r\n          <div className=\"rnc__util--flex-center\">{center}</div>\r\n        </div>\r\n        <div className=\"rnc__notification-container--bottom-center\">{bottomCenter}</div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const { isMobile } = this.props\r\n    const { windowWidth, breakpoint } = this.state\r\n\r\n    if (isMobile && windowWidth <= breakpoint) {\r\n      return this.renderMobileNotifications(this.props)\r\n    }\r\n\r\n    return this.renderScreenNotifications(this.props)\r\n  }\r\n}"],"names":["root","factory","exports","module","require","define","amd","self","__WEBPACK_EXTERNAL_MODULE__359__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","DEFAULT_CONTAINER_VALUES","NOTIFICATION_BASE_CLASS","NOTIFICATION_CONTAINER","NOTIFICATION_INSERTION","NOTIFICATION_TYPE","NOTIFICATION_REMOVAL_SOURCE","isNullOrUndefined","object","isBottomContainer","container","BOTTOM_FULL","BOTTOM_LEFT","BOTTOM_RIGHT","BOTTOM_CENTER","isTopContainer","TOP_FULL","TOP_LEFT","TOP_RIGHT","TOP_CENTER","getHtmlClassesForType","notification","type","content","userDefinedTypes","base","DEFAULT","SUCCESS","DANGER","WARNING","INFO","htmlClassesForExistingType","foundType","find","q","name","concat","htmlClasses","getTransition","duration","timingFunction","delay","property","getUid","Math","random","toString","replace","defaultTransition","transition","transitionOptions","parseNotification","options","defaultNotificationWidth","id","insert","animationIn","animationOut","slidingEnter","slidingExit","touchRevert","touchSlidingExit","dismiss","width","onRemoval","toLowerCase","definedTypes","defaultUserDefinedTypes","option","defaults","click","touch","onScreen","pauseOnHover","waitForAnimation","showIcon","keys","forEach","defaultDismiss","t","touchExit","swipe","fade","Timer","constructor","callback","this","remaining","resume","timerId","start","pause","clearTimeout","Date","now","setTimeout","clear","Notification","props","super","rootElementRef","isMobile","state","parentStyle","height","overflow","htmlClassList","animationPlayState","touchEnabled","timer","componentWillUnmount","componentDidMount","notificationsCount","willSlide","count","TOP","BOTTOM","CENTER","shouldNotificationHaveSliding","scrollHeight","current","onTransitionEnd","removeNotification","TIMEOUT","setState","requestAnimationFrame","prevState","componentDidUpdate","prevProps","hasBeenRemoved","MANUAL","children","endsWith","removalFlag","toggleRemoval","onAnimationEnd","onClick","CLICK","onTouchStart","event","pageX","touches","startX","currentX","position","onTouchMove","distance","offsetWidth","swipeTo","window","innerWidth","left","diffX","abs","hasFullySwiped","t1","t2","TOUCH","opacity","onTouchEnd","onMouseEnter","onMouseLeave","renderTimer","style","animationName","animationDuration","animationTimingFunction","animationFillMode","animationDelay","className","renderCustomContent","CustomContent","hasMouseEvents","join","renderNotification","title","message","render","ref","counter","add","removeAllNotifications","types","incrementCounter","addNotification","parsedNotification","getCounter","register","parameters","Container","breakpoint","notifications","windowWidth","store","remove","addEventListener","handleResize","removeEventListener","nextNotifications","i","findIndex","map","filter","nId","renderNotifications","length","renderMobileNotifications","mobileNotifications","top","bottom","push","getNotificationsForMobileView","renderScreenNotifications","items","topLeft","topRight","topCenter","bottomLeft","bottomRight","bottomCenter","center","topFull","bottomFull","getNotificationsForEachContainer"],"sourceRoot":""}