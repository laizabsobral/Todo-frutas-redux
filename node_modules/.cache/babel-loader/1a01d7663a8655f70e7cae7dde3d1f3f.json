{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Laiza\\\\Downloads\\\\todo-react-redux\\\\src\\\\components\\\\ListItem\\\\Snackbar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport \"./Snackbar.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Snackbar = /*#__PURE__*/_s( /*#__PURE__*/forwardRef(_c = _s((props, ref) => {\n  _s();\n\n  const [showSnackbar, setShowSnackbar] = useState(false);\n  useImperativeHandle(ref, () => ({\n    show() {\n      setShowSnackbar(true);\n      setTimeout(() => {\n        setShowSnackbar(false);\n      }, 3000);\n    }\n\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"snackbar\",\n    id: showSnackbar ? \"show\" : \"hide\",\n    style: {\n      backgroundColor: props.type === \"success\" ? \"#00F593\" : \"#FF0033\",\n      color: props.type === \"success\" ? \"black\" : \"white\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"symbol\",\n      children: props.type === \"success\" ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u2713\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 37\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u2613\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 57\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message\",\n      children: props.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}, \"P6Gg4gza0BMo3d2x9KMfvckRsPQ=\")), \"P6Gg4gza0BMo3d2x9KMfvckRsPQ=\");\n\n_c2 = Snackbar;\nexport default Snackbar;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Snackbar$forwardRef\");\n$RefreshReg$(_c2, \"Snackbar\");","map":{"version":3,"sources":["C:/Users/Laiza/Downloads/todo-react-redux/src/components/ListItem/Snackbar.js"],"names":["React","useState","forwardRef","useImperativeHandle","Snackbar","props","ref","showSnackbar","setShowSnackbar","show","setTimeout","backgroundColor","type","color","message"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,mBAAtC,QAAiE,OAAjE;AACA,OAAO,gBAAP;;;AAEA,MAAMC,QAAQ,iCAAGF,UAAU,SAAC,CAACG,KAAD,EAAQC,GAAR,KAAgB;AAAA;;AAC1C,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,KAAD,CAAhD;AAEAE,EAAAA,mBAAmB,CAACG,GAAD,EAAM,OAAO;AAC9BG,IAAAA,IAAI,GAAG;AACLD,MAAAA,eAAe,CAAC,IAAD,CAAf;AACAE,MAAAA,UAAU,CAAC,MAAM;AACfF,QAAAA,eAAe,CAAC,KAAD,CAAf;AACD,OAFS,EAEP,IAFO,CAAV;AAGD;;AAN6B,GAAP,CAAN,CAAnB;AAQA,sBACE;AACE,IAAA,SAAS,EAAC,UADZ;AAEE,IAAA,EAAE,EAAED,YAAY,GAAG,MAAH,GAAY,MAF9B;AAGE,IAAA,KAAK,EAAE;AACLI,MAAAA,eAAe,EAAEN,KAAK,CAACO,IAAN,KAAe,SAAf,GAA2B,SAA3B,GAAuC,SADnD;AAELC,MAAAA,KAAK,EAAER,KAAK,CAACO,IAAN,KAAe,SAAf,GAA2B,OAA3B,GAAqC;AAFvC,KAHT;AAAA,4BAQE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,gBACGP,KAAK,CAACO,IAAN,KAAe,SAAf,gBAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA3B,gBAA+C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADlD;AAAA;AAAA;AAAA;AAAA,YARF,eAWE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,gBAA0BP,KAAK,CAACS;AAAhC;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CA1B0B,kCAAb,iCAAd;;MAAMV,Q;AA4BN,eAAeA,QAAf","sourcesContent":["import React, { useState, forwardRef, useImperativeHandle } from \"react\";\r\nimport \"./Snackbar.css\";\r\n\r\nconst Snackbar = forwardRef((props, ref) => {\r\n  const [showSnackbar, setShowSnackbar] = useState(false);\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    show() {\r\n      setShowSnackbar(true);\r\n      setTimeout(() => {\r\n        setShowSnackbar(false);\r\n      }, 3000);\r\n    },\r\n  }));\r\n  return (\r\n    <div\r\n      className=\"snackbar\"\r\n      id={showSnackbar ? \"show\" : \"hide\"}\r\n      style={{\r\n        backgroundColor: props.type === \"success\" ? \"#00F593\" : \"#FF0033\",\r\n        color: props.type === \"success\" ? \"black\" : \"white\",\r\n      }}\r\n    >\r\n      <div className=\"symbol\">\r\n        {props.type === \"success\" ? <h1>&#x2713;</h1> : <h1>&#x2613;</h1>}\r\n      </div>\r\n      <div className=\"message\">{props.message}</div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Snackbar;"]},"metadata":{},"sourceType":"module"}