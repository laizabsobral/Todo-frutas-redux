{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Laiza\\\\Downloads\\\\todo-react-redux\\\\src\\\\components\\\\ListItem\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { IoTrashOutline } from \"react-icons/io5\";\nimport * as S from \"./styles\";\nimport Snackbar from \"./components/Snackbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ListItem(_ref) {\n  _s();\n\n  let {\n    item,\n    onCheckClick,\n    onRemoveClick\n  } = _ref;\n  const SnackbarType = {\n    success: \"success\",\n    fail: \"fail\"\n  };\n  const snackbarRef = useRef(null);\n  const [isChecked, setIsChecked] = useState(false);\n  useEffect(() => {\n    setIsChecked(item.checked);\n  }, [item]);\n\n  const handleInputChange = () => {\n    setIsChecked(!item.checked);\n    onCheckClick(item);\n  };\n\n  return /*#__PURE__*/_jsxDEV(S.Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(S.Checkbox, {\n        type: \"checkbox\",\n        checked: isChecked || false,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.Label, {\n        children: [\"Fruta: \", item.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.Label, {\n        children: [\"Pre\\xE7o: \", item.price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(S.Button, {\n      onClick: () => onRemoveClick(item),\n      children: /*#__PURE__*/_jsxDEV(IoTrashOutline, {\n        size: 22\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(S.Button, {\n      className: \"showSnackbarBttn\",\n      onClick: () => {\n        snackbarRef.current.show();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      ref: snackbarRef,\n      message: \"Task Completed Successfully!\",\n      type: SnackbarType.success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ListItem, \"4aKx8hdDX+yLwv8yssI3VEdDl7M=\");\n\n_c = ListItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListItem\");","map":{"version":3,"sources":["C:/Users/Laiza/Downloads/todo-react-redux/src/components/ListItem/index.js"],"names":["React","useEffect","useState","IoTrashOutline","S","Snackbar","ListItem","item","onCheckClick","onRemoveClick","SnackbarType","success","fail","snackbarRef","useRef","isChecked","setIsChecked","checked","handleInputChange","title","price","current","show"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,cAAT,QAA+B,iBAA/B;AACA,OAAO,KAAKC,CAAZ,MAAmB,UAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;;AAEA,eAAe,SAASC,QAAT,OAAyD;AAAA;;AAAA,MAAvC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,YAAR;AAAsBC,IAAAA;AAAtB,GAAuC;AAEtE,QAAMC,YAAY,GAAG;AACnBC,IAAAA,OAAO,EAAE,SADU;AAEnBC,IAAAA,IAAI,EAAE;AAFa,GAArB;AAKA,QAAMC,WAAW,GAAGC,MAAM,CAAC,IAAD,CAA1B;AAGA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,KAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,YAAY,CAACT,IAAI,CAACU,OAAN,CAAZ;AACD,GAFQ,EAEN,CAACV,IAAD,CAFM,CAAT;;AAIA,QAAMW,iBAAiB,GAAG,MAAM;AAC9BF,IAAAA,YAAY,CAAC,CAACT,IAAI,CAACU,OAAP,CAAZ;AACAT,IAAAA,YAAY,CAACD,IAAD,CAAZ;AACD,GAHD;;AAOA,sBACE,QAAC,CAAD,CAAG,SAAH;AAAA,4BAEE;AAAA,8BAEE,QAAC,CAAD,CAAG,QAAH;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,OAAO,EAAEQ,SAAS,IAAI,KAFxB;AAGE,QAAA,QAAQ,EAAEG;AAHZ;AAAA;AAAA;AAAA;AAAA,cAFF,eAQE,QAAC,CAAD,CAAG,KAAH;AAAA,8BAAiBX,IAAI,CAACY,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,eASE,QAAC,CAAD,CAAG,KAAH;AAAA,iCAAiBZ,IAAI,CAACa,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAgBE,QAAC,CAAD,CAAG,MAAH;AAAU,MAAA,OAAO,EAAE,MAAMX,aAAa,CAACF,IAAD,CAAtC;AAAA,6BACE,QAAC,cAAD;AAAgB,QAAA,IAAI,EAAE;AAAtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAhBF,eAmBC,QAAC,CAAD,CAAG,MAAH;AAAU,MAAA,SAAS,EAAC,kBAApB;AACG,MAAA,OAAO,EAAE,MAAM;AACbM,QAAAA,WAAW,CAACQ,OAAZ,CAAoBC,IAApB;AACD;AAHJ;AAAA;AAAA;AAAA;AAAA,YAnBD,eAuBI,QAAC,QAAD;AACA,MAAA,GAAG,EAAET,WADL;AAEA,MAAA,OAAO,EAAC,8BAFR;AAGA,MAAA,IAAI,EAAEH,YAAY,CAACC;AAHnB;AAAA;AAAA;AAAA;AAAA,YAvBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD;;GAtDuBL,Q;;KAAAA,Q","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { IoTrashOutline } from \"react-icons/io5\";\nimport * as S from \"./styles\";\nimport Snackbar from \"./components/Snackbar\";\n\nexport default function ListItem({ item, onCheckClick, onRemoveClick }) {\n  \n  const SnackbarType = {\n    success: \"success\",\n    fail: \"fail\",\n  };\n\n  const snackbarRef = useRef(null);\n  \n  \n  const [isChecked, setIsChecked] = useState(false);\n\n  useEffect(() => {\n    setIsChecked(item.checked);\n  }, [item]);\n\n  const handleInputChange = () => {\n    setIsChecked(!item.checked);\n    onCheckClick(item)\n  }\n\n\n  \n  return (\n    <S.Container>\n     \n      <div> \n         \n        <S.Checkbox\n          type=\"checkbox\"\n          checked={isChecked || false}\n          onChange={handleInputChange}\n        />\n        \n        <S.Label>Fruta: {item.title}</S.Label>\n        <S.Label>Pre√ßo: {item.price}</S.Label>\n        \n      </div>\n\n \n      <S.Button onClick={() => onRemoveClick(item)}>\n        <IoTrashOutline size={22} />\n      </S.Button>\n     <S.Button className=\"showSnackbarBttn\"\n        onClick={() => {\n          snackbarRef.current.show();\n        }} />\n        <Snackbar\n        ref={snackbarRef}\n        message=\"Task Completed Successfully!\"\n        type={SnackbarType.success}\n      />\n    </S.Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}