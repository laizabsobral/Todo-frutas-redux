{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Laiza\\\\Downloads\\\\todo-react-redux\\\\src\\\\components\\\\InputButton\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { FaPlus } from \"react-icons/fa\";\nimport * as S from \"./styles\";\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function InputButton(_ref) {\n  _s();\n\n  let {\n    handleClick\n  } = _ref;\n  const [text, setText] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n\n  const handleOnChangeText = evt => {\n    setText(evt.target.value);\n  };\n\n  const handleOnChangePrice = evt => {\n    setPrice(evt.target.value);\n  };\n\n  const buttonHandleClick = evt => {\n    evt.preventDefault();\n    handleClick(text, price);\n    setText(\"\");\n    setPrice(\"\");\n  }; //verificação de campos\n\n\n  const schema = yup.object({\n    fruta: yup.string().required('Título obrigatório!').max(100),\n    preco: yup.number().required('Preço obrigatório!').max(4)\n  });\n  const formik = useFormik({\n    initialValues: {\n      fruta,\n      preco\n    },\n    validationSchema: schema,\n    onSubmit: values => {\n      console.log(values);\n      setItems(item => [...item, values]);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(S.Container, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(S.Input, {\n        name: \"fruta\",\n        onChange: handleOnChangeText,\n        value: text,\n        placeholder: \"Nome da fruta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(S.Input, {\n        name: \"preco\",\n        onChange: handleOnChangePrice,\n        value: price,\n        placeholder: \"Pre\\xE7o da fruta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(S.Button, {\n        color: \"#86B049\",\n        onClick: buttonHandleClick,\n        children: /*#__PURE__*/_jsxDEV(FaPlus, {\n          size: 19\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(InputButton, \"6txgXOcDQcMGUf4CWcHl1Q2ztOA=\", false, function () {\n  return [useFormik];\n});\n\n_c = InputButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputButton\");","map":{"version":3,"sources":["C:/Users/Laiza/Downloads/todo-react-redux/src/components/InputButton/index.js"],"names":["React","useState","FaPlus","S","useFormik","yup","InputButton","handleClick","text","setText","price","setPrice","handleOnChangeText","evt","target","value","handleOnChangePrice","buttonHandleClick","preventDefault","schema","object","fruta","string","required","max","preco","number","formik","initialValues","validationSchema","onSubmit","values","console","log","setItems","item","handleSubmit"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAuB,gBAAvB;AACA,OAAO,KAAKC,CAAZ,MAAmB,UAAnB;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;;AAEA,eAAe,SAASC,WAAT,OAAsC;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AACnD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMW,kBAAkB,GAAIC,GAAD,IAAS;AAClCJ,IAAAA,OAAO,CAACI,GAAG,CAACC,MAAJ,CAAWC,KAAZ,CAAP;AACD,GAFD;;AAGA,QAAMC,mBAAmB,GAAIH,GAAD,IAAS;AACnCF,IAAAA,QAAQ,CAACE,GAAG,CAACC,MAAJ,CAAWC,KAAZ,CAAR;AACD,GAFD;;AAGA,QAAME,iBAAiB,GAAIJ,GAAD,IAAS;AACjCA,IAAAA,GAAG,CAACK,cAAJ;AACAX,IAAAA,WAAW,CAACC,IAAD,EAAOE,KAAP,CAAX;AACAD,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GALD,CAVmD,CAiBnD;;;AAEA,QAAMQ,MAAM,GAAGd,GAAG,CAACe,MAAJ,CAAW;AACxBC,IAAAA,KAAK,EAAEhB,GAAG,CAACiB,MAAJ,GAAaC,QAAb,CAAsB,qBAAtB,EAA6CC,GAA7C,CAAiD,GAAjD,CADiB;AAExBC,IAAAA,KAAK,EAAEpB,GAAG,CAACqB,MAAJ,GAAaH,QAAb,CAAsB,oBAAtB,EAA4CC,GAA5C,CAAgD,CAAhD;AAFiB,GAAX,CAAf;AAKF,QAAMG,MAAM,GAAGvB,SAAS,CAAC;AACvBwB,IAAAA,aAAa,EAAE;AACXP,MAAAA,KADW;AAEXI,MAAAA;AAFW,KADQ;AAMvBI,IAAAA,gBAAgB,EAAEV,MANK;AAOvBW,IAAAA,QAAQ,EAAGC,MAAD,IAAY;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACAG,MAAAA,QAAQ,CAACC,IAAI,IAAI,CAAC,GAAGA,IAAJ,EAAUJ,MAAV,CAAT,CAAR;AACH;AAVsB,GAAD,CAAxB;AAYE,sBACE,QAAC,CAAD,CAAG,SAAH;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAEJ,MAAM,CAACS,YAAvB;AAAA,8BACA,QAAC,CAAD,CAAG,KAAH;AAAS,QAAA,IAAI,EAAC,OAAd;AAAsB,QAAA,QAAQ,EAAExB,kBAAhC;AAAoD,QAAA,KAAK,EAAEJ,IAA3D;AAAiE,QAAA,WAAW,EAAC;AAA7E;AAAA;AAAA;AAAA;AAAA,cADA,eAGA,QAAC,CAAD,CAAG,KAAH;AAAS,QAAA,IAAI,EAAC,OAAd;AAAsB,QAAA,QAAQ,EAAEQ,mBAAhC;AAAqD,QAAA,KAAK,EAAEN,KAA5D;AAAmE,QAAA,WAAW,EAAC;AAA/E;AAAA;AAAA;AAAA;AAAA,cAHA,eAKA,QAAC,CAAD,CAAG,MAAH;AAAU,QAAA,KAAK,EAAC,SAAhB;AAA0B,QAAA,OAAO,EAAEO,iBAAnC;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cALA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GAjDuBX,W;UAwBTF,S;;;KAxBSE,W","sourcesContent":["import React, { useState } from \"react\";\nimport { FaPlus } from \"react-icons/fa\";\nimport * as S from \"./styles\";\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\n\nexport default function InputButton({ handleClick }) {\n  const [text, setText] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n\n  const handleOnChangeText = (evt) => {\n    setText(evt.target.value);\n  };\n  const handleOnChangePrice = (evt) => {\n    setPrice(evt.target.value);\n  };\n  const buttonHandleClick = (evt) => {\n    evt.preventDefault();\n    handleClick(text, price);\n    setText(\"\");\n    setPrice(\"\");\n  };\n\n  //verificação de campos\n\n  const schema = yup.object({\n    fruta: yup.string().required('Título obrigatório!').max(100),\n    preco: yup.number().required('Preço obrigatório!').max(4),\n})\n\nconst formik = useFormik({\n  initialValues: {\n      fruta,\n      preco,\n     \n  },\n  validationSchema: schema,\n  onSubmit: (values) => {\n      console.log(values);\n      setItems(item => [...item, values])\n  },\n})\n  return (\n    <S.Container >\n      <form onSubmit={formik.handleSubmit}>\n      <S.Input name=\"fruta\" onChange={handleOnChangeText} value={text} placeholder=\"Nome da fruta\"/>\n      \n      <S.Input name=\"preco\" onChange={handleOnChangePrice} value={price} placeholder=\"Preço da fruta\"/>\n      \n      <S.Button color=\"#86B049\" onClick={buttonHandleClick}>\n        <FaPlus size={19} />\n      </S.Button>\n       </form>\n    </S.Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}