{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Laiza\\\\Downloads\\\\todo-react-redux\\\\src\\\\components\\\\InputButton\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { FaPlus } from \"react-icons/fa\";\nimport * as S from \"./styles\"; // import { useFormik } from 'formik';\n// import * as yup from 'yup';\n\nimport { useForm } from \"react-hook-form\";\nimport { ErrorMessage } from \"@hookform/error-message\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function InputButton(_ref) {\n  _s();\n\n  let {\n    handleClick\n  } = _ref;\n  const [text, setText] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n\n  const handleOnChangeText = evt => {\n    setText(evt.target.value);\n  };\n\n  const handleOnChangePrice = evt => {\n    setPrice(evt.target.value);\n  };\n\n  const buttonHandleClick = evt => {\n    evt.preventDefault();\n    handleClick(text, price);\n    setText(\"\");\n    setPrice(\"\");\n  };\n\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n\n  const onSubmit = data => console.log(data); //verificação de campos\n\n\n  return /*#__PURE__*/_jsxDEV(S.Container, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(S.Input, {\n        type: \"input\",\n        name: \"fruta\",\n        onChange: handleOnChangeText,\n        value: text,\n        placeholder: \"Nome da fruta\",\n        ref: register({\n          min: 3,\n          max: 10,\n          required: \"O campo precisa ter no máximo 3 caracteres.\"\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        errors: errors,\n        name: \"fruta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(S.Input, {\n        name: \"preco\",\n        onChange: handleOnChangePrice,\n        value: price,\n        placeholder: \"Pre\\xE7o da fruta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(S.Button, {\n        type: \"submit\",\n        color: \"#86B049\",\n        onClick: buttonHandleClick,\n        children: /*#__PURE__*/_jsxDEV(FaPlus, {\n          size: 19\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(InputButton, \"Pgu/pp01wnzgYMuOoByjWmGm+EE=\", false, function () {\n  return [useForm];\n});\n\n_c = InputButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputButton\");","map":{"version":3,"sources":["C:/Users/Laiza/Downloads/todo-react-redux/src/components/InputButton/index.js"],"names":["React","useState","FaPlus","S","useForm","ErrorMessage","InputButton","handleClick","text","setText","price","setPrice","handleOnChangeText","evt","target","value","handleOnChangePrice","buttonHandleClick","preventDefault","register","handleSubmit","errors","onSubmit","data","console","log","min","max","required"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAuB,gBAAvB;AACA,OAAO,KAAKC,CAAZ,MAAmB,UAAnB,C,CACA;AACA;;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,YAAT,QAA6B,yBAA7B;;AAEA,eAAe,SAASC,WAAT,OAAsC;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AACnD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMW,kBAAkB,GAAIC,GAAD,IAAS;AAClCJ,IAAAA,OAAO,CAACI,GAAG,CAACC,MAAJ,CAAWC,KAAZ,CAAP;AACD,GAFD;;AAGA,QAAMC,mBAAmB,GAAIH,GAAD,IAAS;AACnCF,IAAAA,QAAQ,CAACE,GAAG,CAACC,MAAJ,CAAWC,KAAZ,CAAR;AACD,GAFD;;AAGA,QAAME,iBAAiB,GAAIJ,GAAD,IAAS;AACjCA,IAAAA,GAAG,CAACK,cAAJ;AACAX,IAAAA,WAAW,CAACC,IAAD,EAAOE,KAAP,CAAX;AACAD,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GALD;;AAOA,QAAM;AAAEQ,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA;AAA1B,MAAqCjB,OAAO,EAAlD;;AACA,QAAMkB,QAAQ,GAAIC,IAAD,IAAUC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAA3B,CAlBmD,CAmBnD;;;AAMA,sBACE,QAAC,CAAD,CAAG,SAAH;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAKH,YAAY,CAACE,QAAD,CAA/B;AAAA,8BACA,QAAC,CAAD,CAAG,KAAH;AAAS,QAAA,IAAI,EAAC,OAAd;AAAsB,QAAA,IAAI,EAAC,OAA3B;AACC,QAAA,QAAQ,EAAEV,kBADX;AAEC,QAAA,KAAK,EAAEJ,IAFR;AAGE,QAAA,WAAW,EAAC,eAHd;AAIE,QAAA,GAAG,EACDW,QAAQ,CAAC;AACPO,UAAAA,GAAG,EAAE,CADE;AACCC,UAAAA,GAAG,EAAC,EADL;AAEPC,UAAAA,QAAQ,EAAE;AAFH,SAAD;AALZ;AAAA;AAAA;AAAA;AAAA,cADA,eAaA,QAAC,YAAD;AAAc,QAAA,MAAM,EAAKP,MAAzB;AAAkC,QAAA,IAAI,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA,cAbA,eAeA,QAAC,CAAD,CAAG,KAAH;AAAS,QAAA,IAAI,EAAC,OAAd;AAAuB,QAAA,QAAQ,EAAEL,mBAAjC;AAAsD,QAAA,KAAK,EAAEN,KAA7D;AAAoE,QAAA,WAAW,EAAC;AAAhF;AAAA;AAAA;AAAA;AAAA,cAfA,eAiBA,QAAC,CAAD,CAAG,MAAH;AAAU,QAAA,IAAI,EAAC,QAAf;AAAwB,QAAA,KAAK,EAAC,SAA9B;AAAwC,QAAA,OAAO,EAAEO,iBAAjD;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;;GAlDuBX,W;UAiBqBF,O;;;KAjBrBE,W","sourcesContent":["import React, { useState } from \"react\";\nimport { FaPlus } from \"react-icons/fa\";\nimport * as S from \"./styles\";\n// import { useFormik } from 'formik';\n// import * as yup from 'yup';\nimport { useForm } from \"react-hook-form\";\nimport { ErrorMessage } from \"@hookform/error-message\";\n\nexport default function InputButton({ handleClick }) {\n  const [text, setText] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n\n  const handleOnChangeText = (evt) => {\n    setText(evt.target.value);\n  };\n  const handleOnChangePrice = (evt) => {\n    setPrice(evt.target.value);\n  };\n  const buttonHandleClick = (evt) => {\n    evt.preventDefault();\n    handleClick(text, price);\n    setText(\"\");\n    setPrice(\"\");\n  };\n\n  const { register, handleSubmit, errors } = useForm();\n  const onSubmit = (data) => console.log(data);\n  //verificação de campos\n\n\n\n\n\n  return (\n    <S.Container >\n      <form onSubmit = { handleSubmit(onSubmit) } > \n      <S.Input type=\"input\" name=\"fruta\" \n       onChange={handleOnChangeText} \n       value={text}\n        placeholder=\"Nome da fruta\"\n        ref = {\n          register({\n            min: 3, max:10,\n            required: \"O campo precisa ter no máximo 3 caracteres.\",\n            \n          })\n        }\n      />\n      <ErrorMessage errors = { errors } name=\"fruta\" />\n      \n      <S.Input name=\"preco\"  onChange={handleOnChangePrice} value={price} placeholder=\"Preço da fruta\"/>\n      \n      <S.Button type=\"submit\" color=\"#86B049\" onClick={buttonHandleClick}>\n        <FaPlus size={19} />\n      </S.Button>\n       </form>\n    </S.Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}