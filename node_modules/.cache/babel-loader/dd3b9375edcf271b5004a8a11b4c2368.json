{"ast":null,"code":"const INITIAL_STATE = {\n  items: [item, price]\n};\n\nconst TodoReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  let items = [];\n\n  switch (action.type) {\n    case \"ADD_TODO\":\n      items = state.items;\n      items.push(action.payload);\n      return { ...state,\n        items: items\n      };\n\n    case \"REMOVE_TODO\":\n      items = state.items;\n      const index = items.indexOf(action.payload);\n\n      if (index > -1) {\n        items.splice(index, 1);\n      }\n\n      return { ...state,\n        items: items\n      };\n\n    case \"CHECK_TODO\":\n      items = state.items;\n      items = items.map(el => {\n        let checked = el.checked || false;\n\n        if (el.id === action.payload.id) {\n          checked = !el.checked;\n        }\n\n        return { ...el,\n          checked: checked\n        };\n      });\n      return { ...state,\n        items: items\n      };\n\n    default:\n      return state;\n  }\n};\n\n_c = TodoReducer;\nexport default TodoReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoReducer\");","map":{"version":3,"sources":["C:/Users/Laiza/Downloads/todo-react-redux/src/redux/reducers/todo.reducers.js"],"names":["INITIAL_STATE","items","item","price","TodoReducer","state","action","type","push","payload","index","indexOf","splice","map","el","checked","id"],"mappings":"AAAA,MAAMA,aAAa,GAAG;AACpBC,EAAAA,KAAK,EAAE,CAACC,IAAD,EAAOC,KAAP;AADa,CAAtB;;AAIA,MAAMC,WAAW,GAAG,YAAmC;AAAA,MAAlCC,KAAkC,uEAA1BL,aAA0B;AAAA,MAAXM,MAAW;AACrD,MAAIL,KAAK,GAAG,EAAZ;;AAEA,UAAQK,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AACEN,MAAAA,KAAK,GAAGI,KAAK,CAACJ,KAAd;AACAA,MAAAA,KAAK,CAACO,IAAN,CAAWF,MAAM,CAACG,OAAlB;AACA,aAAO,EAAE,GAAGJ,KAAL;AAAYJ,QAAAA,KAAK,EAAEA;AAAnB,OAAP;;AACF,SAAK,aAAL;AACEA,MAAAA,KAAK,GAAGI,KAAK,CAACJ,KAAd;AAEA,YAAMS,KAAK,GAAGT,KAAK,CAACU,OAAN,CAAcL,MAAM,CAACG,OAArB,CAAd;;AACA,UAAIC,KAAK,GAAG,CAAC,CAAb,EAAgB;AACdT,QAAAA,KAAK,CAACW,MAAN,CAAaF,KAAb,EAAoB,CAApB;AACD;;AAED,aAAO,EAAE,GAAGL,KAAL;AAAYJ,QAAAA,KAAK,EAAEA;AAAnB,OAAP;;AACF,SAAK,YAAL;AACEA,MAAAA,KAAK,GAAGI,KAAK,CAACJ,KAAd;AACAA,MAAAA,KAAK,GAAGA,KAAK,CAACY,GAAN,CAAUC,EAAE,IAAI;AACpB,YAAIC,OAAO,GAAGD,EAAE,CAACC,OAAH,IAAc,KAA5B;;AAEA,YAAGD,EAAE,CAACE,EAAH,KAAUV,MAAM,CAACG,OAAP,CAAeO,EAA5B,EAAgC;AAC9BD,UAAAA,OAAO,GAAG,CAACD,EAAE,CAACC,OAAd;AACD;;AAED,eAAO,EAAC,GAAGD,EAAJ;AAAQC,UAAAA,OAAO,EAAEA;AAAjB,SAAP;AACH,OARO,CAAR;AAUA,aAAO,EAAE,GAAGV,KAAL;AAAYJ,QAAAA,KAAK,EAAEA;AAAnB,OAAP;;AACF;AACE,aAAOI,KAAP;AA5BJ;AA8BD,CAjCD;;KAAMD,W;AAmCN,eAAeA,WAAf","sourcesContent":["const INITIAL_STATE = {\n  items: [item, price],\n};\n\nconst TodoReducer = (state = INITIAL_STATE, action) => {\n  let items = [];\n\n  switch (action.type) {\n    case \"ADD_TODO\":\n      items = state.items;\n      items.push(action.payload);\n      return { ...state, items: items };\n    case \"REMOVE_TODO\":\n      items = state.items;\n\n      const index = items.indexOf(action.payload);\n      if (index > -1) {\n        items.splice(index, 1);\n      }\n\n      return { ...state, items: items };\n    case \"CHECK_TODO\":\n      items = state.items;\n      items = items.map(el => {\n          let checked = el.checked || false;\n\n          if(el.id === action.payload.id) {\n            checked = !el.checked;\n          }\n\n          return {...el, checked: checked}\n      });\n\n      return { ...state, items: items };\n    default:\n      return state;\n  }\n};\n\nexport default TodoReducer;\n"]},"metadata":{},"sourceType":"module"}